Changes from version 2.0.3

---- Improvements ----

  * New commands: KeyCode, DeleteNextWord, DeletePrevWord, AutoComplete,
    InsertTab, Tabs, RequestOrder.

  * Now we set the syntax when a file is saved with a (different) name.

  * Fixed small mistakes in the keyboard sequences displayed in the menus,
    and small discrepancies between default.keys/default.menus and reality
    (thanks to John Gabriele for having pointed out this).

  * Now we highlight correctly control characters in the command line.

  * Display request lists by columns ("RequestOrder 1") or rows ("RequestOrder 0").

  * Allow window resizing during requests (file selection, help).

  * Sort filenames in dictionary order ("aa", "Ab", "ac", ...).

  * Enter in Help places you on the right command in the command list.

  * Only prompt once about identical filenames on startup.

  * Consider "_" as a word character for word-oriented commands.

  * Built-in filename extension to syntax mapping updates:
    dtx -> tex, latex -> tex,  sage -> python.

  * Replace reports the number of replacements (again).
  
  * Enter in Help places you on the right command in the command list.

  * Now the global directory is displayed even if it is not found.
	
  * Aborting an OpenNew doesn't leave you in a new blank document.
  
  * AdjustView now takes optional number of lines or columns to
    adjust by; swapped meaning of AdjustView 'C' and 'M' parameters.
  
  * Read .keys and possibly .menus files from NE_GLOBAL_DIR on startup.

  * More defensive reading of lines/columns from terminfo to avoid crashes
    with XTerm on Mac OS X.

  * More portable and robust window-size change detection.

Changes from version 2.0.2

---- Bug fixes ----

  * Still better file handling for the THROUGH command.

  * Visual glitches appearing on Cygwin have been fixed.

Changes from version 2.0.1

---- Bug fixes ----

  * The file names for the THROUGH command were being generated
    correctly, but in the current directory instead of P_tmpdir.

  * The built-in ANSI escape sequences had a glitch that could cause
    some visual inconsistencies.

Changes from version 2.0

---- Bug fixes ----

  * The file names for the THROUGH command were being generated
    incorrectly.

Changes from version 1.43

---- Improvements ----

  * We got syntax highlighting! Thanks to Daniele Filaretti, whose undergrad
    thesis was about porting joe's syntax highlighting system to ne.

  * Billions of small improvements and cleanups.

Changes from version 1.42

---- Bug fixes ----

  * Finally fixed the BSD exit problem (ESC would kill ne on BSD and
    derivated operating systems). The problem lay in a slight difference
    between Linux and BSD in the getc() implementation (thanks to Alessio
    Orlandi for isolating the problem and finding a fix).

  * An eccess in loop counter increment would prevent alphabetic
    menu search to work under certain circumstances (thanks to
    Lewis Gentry for finding the problem and writing the fix).

  * The paragraphing procedure was very slow on very long lines.
    Todd found and fixed the problem.

Changes from version 1.41

---- Bug fixes ----

  * The file requester was bizarrely assuming that ".." and "." would
    have been the first two names returned by readdir(). Now it doesn't.

  * A new option makes it possible to use a visual bell instead of an
    audible bell (implemented by Dimitar Zhekov).

Changes from version 1.40

---- Bug fixes ----

  * texi2html changed its behaviour by creating a directory for
    split output. As a results, ne's docs where those of 1.39.

---- Improvements ----

  * The ne info file was never installed properly by the RPM package.
    Now the documentation source has proper categorisation and info
    dir entries, and the RPM package installs it where it belongs. This
    however requires (apparently) to remove and reinstall ne.

  * Paolo Boldi made me notice that find skips the entry currently
    under the cursor. I don't know how this exactly happened first,
    but it is certainly a major nuisance, as it makes it necessary
    to add a spurious character to replace a pattern appearing at the
    beginning of a buffer. Thus, find now will match an entry under the
    cursor. Of course, repeating the last operation still skips the
    entry under the cursor. This change might break some macros.

Changes from version 1.39

---- Bug fixes ----

  * A non-ASCII history compatible with UTF-8 would have got an UTF-8
    encoding when loaded from disk. This was causing a number of problems
    (including lock-ups) when 8-bit content was subsequently written on the
    input line. Now the encoding is reset to 8-bit when the history is
    reloaded. This causes no problem, as the history buffer is actually
    agnostic and recomputes the encoding of each line dynamically.

  * Completion was not working if the current process directory was not
    accessible, usually because it has been removed. That was not a good
    thing. Now we do completion, but the current directory of the process
    is permanently changed.

Changes from version 1.38

---- Improvements ----

  * Added built-in sequences for Home/End key in gnome-terminal.

Changes from version 1.37

---- Bug fixes ----

  * The #include <ncurses/term.h> was not compiling on Mac OS X.
    Now we use <term.h>.

Changes from version 1.36

---- Improvements ----

  * Now bookmarks move following text editing, rather than being just
    column/position indicators.

  * Clips are now binary in binary mode.

  * Bookmarks can be deleted using the UNSETBOOKMARK command.

  * A new automatic bookmark is set whenever you move to a bookmark. You
    can go there with GOTOBOOKMARK -. Successive invocation toogle between
    the current and previous position.

---- Bug fixes ----

  * Fixed missing updates of the percent shown in the status bar after
    certain update operations.

  * Undoing a new document does not set the modified flag any longer.

  * Fixed "See see" happening in on-line docs.

Changes from version 1.35

---- Improvements ----

  * Explicit empty defaults for compilation variables (NE_DEBUG, etc.) as
    apparently some versions of GNU make erroneously evaluate them to
    true otherwise.

---- Bug fixes ----

  * Somewhere in the UTF-8 implementation process non-vertical pastes stopped
    working in free form mode if the cursor was not on an actual character. Fixed.

Changes from version 1.34

---- Improvements ----

  * Following a request by Koblinger Egmont, experimentally ne now does not
    reset the terminal. This caused some problems with gnome-terminal, and
    it does not appear to be actually necessary.

---- Bug fixes ----

  * In certain bizarre conditions, ne was not discarding malformed
    UTF-8 sequences. This lead to apparent freezing.

Changes from version 1.33

---- Improvements ----

  * Dimitar Zhekov suggested to use the system toupper() function to
    initialise the up_case array. This lead to case-insensitive searches and
    up/down-casing working on systems with 8-bit (e.g., ISO-8859-x) encodings.

Changes from version 1.32

---- Bug fixes ----

  * Deleting a TAB followed by a TAB at the start of line would
    have caused an incorrect screen update.

Changes from version 1.31

---- Improvements ----

  * Word-search features now understand UTF-8 punctuation and
    whitespace (unless, of course, you compile with NE_NOWCHAR). The
    same happens for word wrapping.

  * Because of a legacy implementation of buffer handling functions,
    auto indentation was causing an undo record for each character
    composing the indentation. Now it always causes a single undo record.

  * The whitespace deletion and new line insertion operations in automatic
    word wrapping are low linked in a single undo/redo operation.

---- Bug fixes ----

  * Inserting a new line on the next-to-last line of the screen would
    have caused an incorrect screen update.

Changes from version 1.30

---- Bug fixes ----

  * Compilation variables are now prefixed with "NE_" (NE_ANSI, NE_POSIX,
    NE_TERMCAP,...) so to avoid clashes with environment variables.

Changes from version 1.20

---- Improvements ----

  * UTF-8 support, including multiple-column characters.

  * Incremental moves now work on the input line, too.

  * The command line history now does not accumulate identical lines.

  * The undo/redo system now updates correctly the modified flag.

  * Much more navigation keys do work on the input line; buffer-wide
    movement (page, top/bottom, etc.) moves through the history.

  * Percentage indicator on the status bar.

  * Several optimisations in cursor motion when the status bar is off make
    ne even more attractive for editing along slow lines (GSM, GPRS, etc.).

  * ne now sports a simple testing framework that helped squeezing out several
    long-standing bugs.

  * Menus now do work with any window size.

  * Better positioning after case folding operations.

---- Bug fixes ----

  * Pasting on the command line is now really a paste.

  * Fixed very, very old small bug (probably since 1.0) in window update
    when overwriting.

  * Center would have core dumped on very long lines.

  * The history is still read from ~/.ne/.history, but tilda expansion
    is handled internally.

  * Paragraph would hang in certain extreme situations.

  * Empty replace operations with non-empty regexps would have skipped adjacent
    matches.

  * The cursor was not appearing on menus when using FastGUI.

  * Fixed a number of very long-standing bugs, probably dating 1993.

  * Fixed erroneous screen update after certain case folding operations.

Changes from version 1.19

---- Improvements ----

  * The F1 key as escape has become suddenly unavailable on Gnome, as it
    is trapped by gnome-terminal (it opens the help screen). A new fake
    sequence (ESC-ESC) has been added as a further alternative.

  * Now ne compiles again on the Amiga.

  * Cleaned up makefile.

---- Bug fixes ----

  * The check for migrated files has been eliminated, as it does not work
    in some unlikely filesystems that allocate small files directly into
    inodes.

  * The menu entries for Start/End of file were really moving to Start/End
    of line (Dimitar Zhekov).

  * Fixed inconsistency in moving down incrementally (Dimitar Zhekov).

  * Fixed problem with error returned during number inputs  (Dimitar Zhekov).


Changes from version 1.18a

---- Improvements -----

  * Implemented support for the prefix-simulated Meta key, for instance
    as found in gnome-terminal. Now it is possible to program, at least
    partially, the behaviour of keys modified by ALT (META). Have a look
	 at the new default.keys file.

  * Finally implemented MS-DOS CR/LF termination handling. File with
    at least a CR/LF are marked automatically to be saved with CR/LFs. There
    is a flag that remembers this, and you can change it with the command
    CRLF, so every conversion is possible. PreserveCR of course continues to
    treat CRs as standard characters.

  * ne has now an --ansi option that makes it able to run without any
    terminal database, provided the terminal used is roughly ANSI-compliant,
    using a hardwired set of capabilities. By building ne with the "ansi"
    target, the switch to the hardwired set can be made automatical. The
    target also forces termcap instead of terminfo, so the resulting ne is
    completely independent of any system library and also of any database. A
    corresponding --noansi option ensures that the built-in terminal is
    ignored.

  * A new powerful navigation command borrowed from Brief was implemented
    following Arnim Littek's suggestion. It move incrementally towards
    the (or start) of file. It is bound to the Home and End keys by default.
    Try it out! (MoveIncUp/MoveIncDown)

  * Many new keyboard sequences have been built into ne, to improve
    compatibility with broken terminal databases.


Changes from version 1.18

---- Bug fixes -----

  * REALLY fixed all cosmetic problems with wrong cursor positioning after
    quitting ne.


Changes from version 1.17

---- Bug fixes -----

  * The REPLACEALL command was not starting the chained undo system giving rise
    to quirky behaviour.

  * Fixed a small bug when recording find operations: quotes
    around arguments would have been lost.

  * Fixed a small problem with terminal database: we have to
    use key_end, not key_ll for the end key.

  * Since completion had been introduced, you couldn't type a TAB into the
    command line even if completion wasn't allowed. This is fixed.

  * Fixed a small problem with garbage printed on the screen when editing
    binary files.

  * Fixed a small problem when replacing regexp patterns that could match the
    empty string with the empty string.

  * HexCode is now inherited by new buffers.

  * Fixed all cosmetic problems with wrong cursor positioning after
    quitting ne.



Changes from version 1.14d to 1.17

---- File Operations ----

  * File loads and saves will not try to operate on directories or migrated
    files. Such attempts result in a read-only unmodified buffer containing the
    line "<File is a directory; ne won't touch it.>" or "<File is migrated; ne
    won't touch it.>"

  * The new command "PreserveCR" toggles a prefs flag which changes the way
    carriage returns are treated when files are loaded. With PreserveCR set,
    <CR> characters are treated as text rather than line terminators.

  * Autoprefs are now loaded and set _before_ file data is loaded.

  * Simple filename completion on the command line using the TAB key. Hitting
    the key twice brings you to the file requester. Also, exiting the file
    requester with the TAB key will leave on the input line the currently
    selected file.

---- Flags ----

  * New "PreserveCR" command and flag. (see above)

  * New "Flags" command does exactly what "help flags" does; it explains all
    those funny letters at the bottom of the screen, and tells which commands
    operate on each of them.

  * New "Modified" command lets you change the flag that tells whether the
    buffer is modified.

  * New "PushPrefs" and "PopPrefs" push and pop buffer specific flags onto a
    stack. Handy for macros that need to have certain flag settings to work
    properly. Also makes it easy to transfer a set of flags from one buffer to
    another: "PushPrefs", "NextDoc", "PopPrefs" will do that.

  * The Turbo command now operates differently: there is no more displayed `t'
    flag, the turbo parameter is global, and the value 0 of the parameter means
    using twice the number of visible rows (which is however now adjusted
    dynamically). If you do not want delayed updates, use a very large number.

---- Navigation ----

  * New "AdjustView [T|C|B|L|M|R]" command shifts the display virtically so that
    your current line becomes the Top, Center, or Bottom displayed line (for
    'T','C','B' respectively), or shifts the display horizontally so that your
    current column becomes the Left-most, Middle, or Right-most column (for
    'L','M','R' respectively) within the limits of the current tab size.

  * New "MoveTOS" and "MoveBOS" commands move to the top and bottom of the
    screen, respectively.

  * New "PageUp" and "PageDown" commands which have different semantics from
    PrevPage and NextPage. Basically, starting from anywhere and doing any
    number of PageUps and PageDowns, you can get back to where you were -- with
    the same screen view and cursor position -- using only PageUps and
    PageDowns.

---- Editing ----

  * Greatly enhanced "Paragraph" command. It still doesn't do smart spacing
    after punctuation or justification or other evil things, but it does handle
    space to the left of paragraphs and first-line indent (both positive and
    negative).

  * Fixed a small bug in word_wrap() that would cause leading space to diminish
    and spurious new lines to be inserted if the offending line had leading
    space but was otherwise unbreakable (like a long URL for example).

---- Miscellaneous ----

  * New command line history. Cursor up and down let you select previously
    entered strings for further editing. Most recent command strings are saved
    and loaded automatically in ~/.ne/.history.

  * Number can be entered in octal (prefix with 0), hexadecimal (prefix with
    0x) or decimal.

  * Status line now shows '-' instead of ' ' for unset flags.

  * Status line optionally (via the HEXCODE command) displays the two-digit
    hex code of the current character between the flags and the file name.

  * Status line shows the right-most part of the file name if it won't all fit
    on the screen.

  * ^E now moves to the end of line, and ^Z suspends ne.

  * A global ne directory gives the sysadmin a place to put macros and autopref
    files for things common to his machine, or in environments which are heavily
    into shared file/name space, things common to a group of machines. A user's
    settings in his own ~/.ne directory will take precidence over anything found
    in the global ne directory of course.

  * New "InsertString" command. When saving macros, sequences of "InsertChar"
    commands are turned automagically into a possibly smaller number of
    "InsertString" commands.

  * Support for resizing windows on systems which support the SIGWINCH signal
    and the TIOCGWINSZ ioctl. Refresh (^L) will force a check of the current
    window size anyway. Note that the there is no resize during inputs on the
    commandline.

  * Augmented terminal sequences as a kludge against badly administrated
    terminal databases.




Changes from version 1.14d

- New --keys and --menus options allow to configurate the configuration (!) file
names.

- At startup, after the copyright message a pointer to the F1/ESC keys is
printed.

- Fixed a bad bug related to backward regexp searches.

- New Suspend (SU) command that suspends ne using the TSTP signal

- ARGH! The up_case array does not upper Z!

- replace_regexp wasn't handling correctly the `\\` case

- The up_case array was "downcasing" @ (which of course is nonsense)

- Fixed a small bug in the update of a wordwrapped line

- Fixed a bug in the buffered save code: a line feed (or NUL character) at a
multiple of the length of the save buffer followed by an empty line would have
caused a crash; this was happening currently with line feeds at multiples of
32768

- Fixed a very stupid bug: the line length field was a short int---sorry

- isspace(), ispuntct() etc. have problems if signed chars are the default of
the compiler. (unsigned char) has been prefixed to the argument of every call to
those functions. Moreover, a call to setlocale() sets correctly the their
behaviour depending on the language chosen by the user.

- Fixed a bug in paragraph(); ne used to try to delete something on a
non-existing line.

- Added information about compilation under SunOS. In particular, an ugly
crashing problem has been tracked to a strange behaviour of realloc(NULL,n),
which returns 0. Moreover, the famous problem with the ESC key (ne was
terminating) has been tracked to bad behaviour of Sun's termcap libraries.

- When creating a file only user read/write permissions were required. Now all
permissions are set up. umask will filter out the unwanted ones.

- Fixed problem when saving preferences files on Linux.

- Fixed a bug with unsigned enums (wrong commands did not produce error
messages).

- Fixed a bug with repeated empty copies (causing segmentation faults).

- Fixed problems with getcwd() and with argv[]; thanks to Todd M. Lewis for
finding out the problems and suggesting the fixes.

- DeleteLine would not stop deleting when on the last line. Now it returns an
error.

- A severe bug in request_files fixed by Todd Lewis; the character buffer would
have been reallocated, but the pointers to the buffer would have not been
updated.

- Fixed problems under Linux (exiting could cause bash not to work or reverse
mode under tcsh).

- Fixed a problem with hard spaces (160). They were printed as such, now they
are printed as spaces.

