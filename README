Welcome to ne, the nice editor.

Documentation (in the "doc" directory) is provided in the form of a
texinfo file. It can be printed as a manual using TeX and GNU's
texinfo.tex macro package, or turned into a hypertext document using GNU's
makeinfo. The directory contains several pre-compiled printable and
hypertext versions of the documentation.

There are three makefiles provided with the distribution: a top-level
makefile for easy build and installation, and a low-level makefile in the
src directory that just builds ne's executable and provides some more
flexibility, and another low-level makefile in the doc directory.

The top-level makefile provide targets "source" (builds the standard
distribution), "cygwin" (builds the cygwin distribution) and "install"
(build and installs ne). The PREFIX make variable decides where ne will be
installed and which will be its global directory. For installation, a
POSIX compliant machine with a terminfo database should be sufficient.
Note, however, that source distribution requires a complete build, and in
particular the presence of a number of tools that manipulate texinfo
files, as some of the source files are generated from the documentation.

By playing with the low-level src makefile you have more options (as you can
first build using the low-level makefile and then use the install target
of the top-level makefile). If you have a termcap database, you should
specify "NE_TERMCAP=1" (i.e., type "make NE_TERMCAP=1"). It uses the GNU
version of termcap, whose sources are included (no library is needed). In
general, if a compilation via a simple "make" fails you should try these
variations in order until one of them succeeds:
  make
  make NE_POSIX=1
  make NE_TERMCAP=1
  make NE_POSIX=1 NE_TERMCAP=1
They use slightly different #define's to overcome the slight differences
among systems. If you have problem with the local compiler and have the GNU
compiler installed, try "CC=gcc", and possibly also "OPTS=-ansi".

If you are compiling under Cygwin or similar emulations of UN*X running
under other operating systems, you can specify "NE_ANSI=1" to build a copy
of ne that will use by default built-in ANSI terminal control sequences.
You can always override this choice with a command line option, however.
By combining "NE_ANSI=1" and "NE_TERMCAP=1" you will get a version of ne
that needs no library, and moreover starts by default in ANSI mode.

ne can handle UTF-8, and supports multiple-column characters. The latter
requires some support from the system: you can disable wide-character,
multiple-column support with "NE_NOWCHAR=1".

If you cannot install ne as root, you can change the position of the
global preferences directory with "NE_GLOBAL_DIR=<directory>" (this is
done automatically by the top-level makefile on the basis of the PREFIX
variable). The global directory should contain automatic preferences files
for common extensions, and must contain the syntax directory provided with
ne's distribution, which contains joe's syntax definition files. In any
case, ne will use instead the value of the NE_GLOBAL_DIR environment
variable if it is set. The value ne ultimately uses, whether compiled in
or from the environment, is displayed at startup if no file is open.

Compatibility problems are also discussed in the documentation. Don't be
alarmed if you get a lot of warnings. If something does not work, please
feel free to email us.


					seba	(vigna@dsi.unimi.it)
					Todd    (Todd_Lewis@unc.edu)
